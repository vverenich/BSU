**************************************************************************
ЗАДАЧА(std::fill)
**************************************************************************
Заполнить вектор из 1'000'000'000 элементов единицами.

**************************************************************************
Код(последовательная политика)
**************************************************************************
#include <iostream>
#include <algorithm>
#include <chrono>
#include <vector>
#include <execution>

using namespace std;

int main()
{
    std::vector<int> numbers(10'000'000);
    
    clock_t start = clock();
    std::fill(numbers.begin(), numbers.end(), 1);
    clock_t end = clock();

    printf("time elapsed: %.16f sec\n", (double)(end - start) / CLOCKS_PER_SEC);
    
    return 0;
}
**************************************************************************
Код(параллельная политика)
**************************************************************************


#include <iostream>
#include <algorithm>
#include <chrono>
#include <vector>
#include <execution>

using namespace std;

int main()
{
    std::vector<int> numbers(10'000'000);
    
    clock_t start = clock();
    std::fill(std::execution::par, numbers.begin(), numbers.end(), 1);
    clock_t end = clock();

    printf("time elapsed: %.16f sec\n", (double)(end - start) / CLOCKS_PER_SEC);

    return 0;
}
**************************************************************************
Вычислительные эксперименты
**************************************************************************
--------------------------------------------------------------------------------
		| Последовательная политика(время) |  параллельная политика(время) |    
--------------------------------------------------------------------------------
100'000'000	|	0.016			    	     |	0.019
50'000'000	|	0.009				     |	0.010
10'000'000	|	0.004				     |	0.002